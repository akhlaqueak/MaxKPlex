**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 7,477; m = 56,943 (undirected)
*** Heuristic kplex size: 45, time: 3,642 (microseconds)
*** Degeneracy k-plex size: 70, max_core: 88, UB: 91, Time: 733 (microseconds)
*** After core shrink: n = 256, m = 15,871 (undirected)
*** After core-truss co-pruning: n = 122, m = 6,511, density = 0.8821
prune_cnt: 48, max_n: 115, min_density: 0.9001, avg_density: 0.9438
search_cnt: 48, max_n: 115, min_density: 0.9001, avg_density: 0.9438
>>/tech-WHOIS t_Search: 0.272447	MaxKPlex_Size: 71 t_Total: 0.287117 t_Seesaw: 0.000000

**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 36,365; m = 1,590,651 (undirected)
*** Heuristic kplex size: 19, time: 26,569 (microseconds)
*** Degeneracy k-plex size: 57, max_core: 81, UB: 84, Time: 31,578 (microseconds)
*** After core shrink: n = 14,139, m = 945,180 (undirected)
*** After core-truss co-pruning: n = 317, m = 14,339, density = 0.2863
Degen find a solution of size 59
prune_cnt: 80, max_n: 113, min_density: 0.8564, avg_density: 0.9301
search_cnt: 80, max_n: 113, min_density: 0.8564, avg_density: 0.9301
>>/socfb-Texas84 t_Search: 0.735138	MaxKPlex_Size: 60 t_Total: 2.315995 t_Seesaw: 0.000000

**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 92,118; m = 360,767 (undirected)
*** Heuristic kplex size: 14, time: 5,592 (microseconds)
*** Degeneracy k-plex size: 18, max_core: 58, UB: 61, Time: 6,111 (microseconds)
*** After core shrink: n = 5,222, m = 162,193 (undirected)
*** After core-truss co-pruning: n = 616, m = 25,387, density = 0.1340
Degen find a solution of size 20
prune_cnt: 360, max_n: 171, min_density: 0.4014, avg_density: 0.5402
search_cnt: 360, max_n: 171, min_density: 0.4014, avg_density: 0.5402
>>/ia-wiki-Talk t_Search: 4.881445	MaxKPlex_Size: 21 t_Total: 5.001452 t_Seesaw: 0.000000

**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 71; m = 1,855 (undirected)
*** Heuristic kplex size: 14, time: 166 (microseconds)
*** Degeneracy k-plex size: 16, max_core: 53, UB: 56, Time: 28 (microseconds)
*** After core shrink: n = 70, m = 1,855 (undirected)
*** After core-truss co-pruning: n = 70, m = 1,855, density = 0.7681
prune_cnt: 50, max_n: 70, min_density: 0.7681, avg_density: 0.8001
search_cnt: 50, max_n: 70, min_density: 0.7681, avg_density: 0.8001
>>/johnson8-4-4 t_Search: 21.730491	MaxKPlex_Size: 18 t_Total: 21.730893 t_Seesaw: 0.000000

**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 29,733; m = 1,305,757 (undirected)
*** Heuristic kplex size: 29, time: 6,892 (microseconds)
*** Degeneracy k-plex size: 46, max_core: 76, UB: 79, Time: 22,190 (microseconds)
*** After core shrink: n = 17,038, m = 1,021,599 (undirected)
*** After core-truss co-pruning: n = 1,539, m = 54,515, density = 0.0461
Degen find a solution of size 49
Degen find a solution of size 50
Degen find a solution of size 52
Degen find a solution of size 53
Degen find a solution of size 54
prune_cnt: 25, max_n: 72, min_density: 0.9499, avg_density: 0.9690
search_cnt: 24, max_n: 72, min_density: 0.9499, avg_density: 0.9679
>>/socfb-Indiana t_Search: 0.035973	MaxKPlex_Size: 55 t_Total: 1.272521 t_Seesaw: 0.000000

**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 63,393; m = 816,886 (undirected)
*** Heuristic kplex size: 22, time: 4,393 (microseconds)
*** Degeneracy k-plex size: 31, max_core: 52, UB: 55, Time: 13,683 (microseconds)
*** After core shrink: n = 9,271, m = 350,579 (undirected)
*** After core-truss co-pruning: n = 374, m = 10,519, density = 0.1508
Degen find a solution of size 32
Degen find a solution of size 33
Degen find a solution of size 36
Degen find a solution of size 37
prune_cnt: 46, max_n: 63, min_density: 0.8623, avg_density: 0.9141
search_cnt: 46, max_n: 63, min_density: 0.8623, avg_density: 0.9141
>>/socfb-OR t_Search: 0.027674	MaxKPlex_Size: 37 t_Total: 0.332756 t_Seesaw: 0.000000

**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 217,892; m = 5,653,221 (undirected)
*** Heuristic kplex size: 24, time: 2,088 (microseconds)
*** Degeneracy k-plex size: 24, max_core: 35, UB: 38, Time: 40,752 (microseconds)
*** After core shrink: n = 217,112, m = 5,645,965 (undirected)
*** After core-truss co-pruning: n = 204,924, m = 5,323,510, density = 0.0003
prune_cnt: 65077, max_n: 36, min_density: 0.7273, avg_density: 0.9894
search_cnt: 2953, max_n: 36, min_density: 0.7273, avg_density: 0.7663
>>/sc-pwtk t_Search: 1.143884	MaxKPlex_Size: 24 t_Total: 1.600111 t_Seesaw: 0.000000

**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 2,523,387; m = 7,918,801 (undirected)
*** Heuristic kplex size: 17, time: 20,296 (microseconds)
*** Degeneracy k-plex size: 40, max_core: 68, UB: 71, Time: 126,777 (microseconds)
*** After core shrink: n = 17,761, m = 711,159 (undirected)
*** After core-truss co-pruning: n = 264, m = 11,792, density = 0.3397
Degen find a solution of size 42
prune_cnt: 129, max_n: 123, min_density: 0.7310, avg_density: 0.8317
search_cnt: 129, max_n: 123, min_density: 0.7310, avg_density: 0.8317
>>/soc-flixster t_Search: 4.294933	MaxKPlex_Size: 42 t_Total: 4.997203 t_Seesaw: 0.000000

**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 2,937,613; m = 20,959,854 (undirected)
*** Heuristic kplex size: 9, time: 36,109 (microseconds)
*** Degeneracy k-plex size: 17, max_core: 63, UB: 66, Time: 641,633 (microseconds)
*** After core shrink: n = 469,342, m = 15,355,191 (undirected)
*** After core-truss co-pruning: n = 35,378, m = 876,436, density = 0.0014
Degen find a solution of size 18
Degen find a solution of size 19
Degen find a solution of size 20
Degen find a solution of size 22
Degen find a solution of size 24
Degen find a solution of size 27
Degen find a solution of size 30
prune_cnt: 159, max_n: 94, min_density: 0.6272, avg_density: 0.8206
search_cnt: 157, max_n: 94, min_density: 0.6272, avg_density: 0.8186
>>/socfb-B-anon t_Search: 1.346504	MaxKPlex_Size: 30 t_Total: 20.591635 t_Seesaw: 0.000000

**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 1,191,806; m = 4,519,330 (undirected)
*** Heuristic kplex size: 8, time: 21,229 (microseconds)
*** Degeneracy k-plex size: 19, max_core: 70, UB: 73, Time: 103,309 (microseconds)
*** After core shrink: n = 51,344, m = 1,291,703 (undirected)
*** After core-truss co-pruning: n = 960, m = 42,578, density = 0.0925
Degen find a solution of size 21
prune_cnt: 583, max_n: 236, min_density: 0.3182, avg_density: 0.5094
search_cnt: 583, max_n: 236, min_density: 0.3182, avg_density: 0.5094
>>/soc-lastfm t_Search: 58.247081	MaxKPlex_Size: 21 t_Total: 59.127948 t_Seesaw: 0.000000

**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 36,365; m = 1,590,651 (undirected)
*** Heuristic kplex size: 19, time: 25,110 (microseconds)
*** Degeneracy k-plex size: 57, max_core: 81, UB: 84, Time: 29,706 (microseconds)
*** After core shrink: n = 14,139, m = 945,180 (undirected)
*** After core-truss co-pruning: n = 317, m = 14,339, density = 0.2863
Degen find a solution of size 59
prune_cnt: 80, max_n: 113, min_density: 0.8564, avg_density: 0.9301
search_cnt: 80, max_n: 113, min_density: 0.8564, avg_density: 0.9301
>>/socfb-Texas84 t_Search: 0.741914	MaxKPlex_Size: 60 t_Total: 2.171495 t_Seesaw: 0.000000

**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 201; m = 17,910 (undirected)
*** Heuristic kplex size: 51, time: 1,545 (microseconds)
*** Degeneracy k-plex size: 101, max_core: 169, UB: 172, Time: 237 (microseconds)
*** After core shrink: n = 200, m = 17,910 (undirected)
*** After core-truss co-pruning: n = 200, m = 17,910, density = 0.9000
Degen find a solution of size 103
prune_cnt: 68, max_n: 200, min_density: 0.9000, avg_density: 0.9174
search_cnt: 68, max_n: 200, min_density: 0.9000, avg_density: 0.9174
>>/san200-0-9-2 t_Search: 4616.871584	MaxKPlex_Size: 105 t_Total: 4616.876711 t_Seesaw: 0.000000

**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 35,112; m = 1,465,654 (undirected)
*** Heuristic kplex size: 41, time: 20,534 (microseconds)
*** Degeneracy k-plex size: 57, max_core: 83, UB: 86, Time: 25,266 (microseconds)
*** After core shrink: n = 12,496, m = 820,553 (undirected)
*** After core-truss co-pruning: n = 1,188, m = 55,226, density = 0.0783
Degen find a solution of size 60
Degen find a solution of size 61
Degen find a solution of size 65
prune_cnt: 159, max_n: 108, min_density: 0.8884, avg_density: 0.9484
search_cnt: 159, max_n: 108, min_density: 0.8884, avg_density: 0.9484
>>/socfb-UF t_Search: 0.567359	MaxKPlex_Size: 65 t_Total: 1.689278 t_Seesaw: 0.000000

**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 9,886; m = 506,437 (undirected)
*** Heuristic kplex size: 31, time: 7,614 (microseconds)
*** Degeneracy k-plex size: 38, max_core: 85, UB: 88, Time: 9,673 (microseconds)
*** After core shrink: n = 6,872, m = 460,188 (undirected)
*** After core-truss co-pruning: n = 550, m = 25,693, density = 0.1702
Degen find a solution of size 39
Degen find a solution of size 41
Degen find a solution of size 43
prune_cnt: 196, max_n: 156, min_density: 0.6583, avg_density: 0.7632
search_cnt: 196, max_n: 156, min_density: 0.6583, avg_density: 0.7632
>>/socfb-Duke14 t_Search: 15.891846	MaxKPlex_Size: 43 t_Total: 16.587100 t_Seesaw: 0.000000

**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 952,204; m = 20,770,807 (undirected)
*** Heuristic kplex size: 21, time: 6,558 (microseconds)
*** Degeneracy k-plex size: 21, max_core: 34, UB: 37, Time: 279,040 (microseconds)
*** After core shrink: n = 909,537, m = 20,770,807 (undirected)
*** After core-truss co-pruning: n = 908,841, m = 20,748,670, density = 0.0001
prune_cnt: 387809, max_n: 42, min_density: 0.6048, avg_density: 0.8581
search_cnt: 350668, max_n: 42, min_density: 0.6048, avg_density: 0.8431
>>/sc-ldoor t_Search: 55.200208	MaxKPlex_Size: 21 t_Total: 57.153418 t_Seesaw: 0.000000

**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 65; m = 1,824 (undirected)
*** Heuristic kplex size: 32, time: 185 (microseconds)
*** Degeneracy k-plex size: 32, max_core: 57, UB: 60, Time: 20 (microseconds)
*** After core shrink: n = 64, m = 1,824 (undirected)
*** After core-truss co-pruning: n = 64, m = 1,824, density = 0.9048
prune_cnt: 26, max_n: 64, min_density: 0.9048, avg_density: 0.9170
search_cnt: 25, max_n: 64, min_density: 0.9048, avg_density: 0.9137
>>/hamming6-2 t_Search: 148.948645	MaxKPlex_Size: 32 t_Total: 148.948998 t_Seesaw: 0.000000

**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 104,104; m = 2,193,083 (undirected)
*** Heuristic kplex size: 9, time: 13,535 (microseconds)
*** Degeneracy k-plex size: 11, max_core: 92, UB: 95, Time: 46,204 (microseconds)
*** After core shrink: n = 63,437, m = 2,031,014 (undirected)
*** After core-truss co-pruning: n = 4,054, m = 182,800, density = 0.0223
Degen find a solution of size 15
Degen find a solution of size 20
Degen find a solution of size 21
Degen find a solution of size 22
prune_cnt: 395, max_n: 247, min_density: 0.3848, avg_density: 0.5348
search_cnt: 395, max_n: 247, min_density: 0.3848, avg_density: 0.5348
>>/soc-LiveMocha t_Search: 181.823591	MaxKPlex_Size: 22 t_Total: 183.566210 t_Seesaw: 0.000000

**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 415,864; m = 9,378,650 (undirected)
*** Heuristic kplex size: 21, time: 3,887 (microseconds)
*** Degeneracy k-plex size: 21, max_core: 34, UB: 37, Time: 121,229 (microseconds)
*** After core shrink: n = 404,785, m = 9,378,650 (undirected)
*** After core-truss co-pruning: n = 403,802, m = 9,350,780, density = 0.0001
prune_cnt: 191041, max_n: 42, min_density: 0.6048, avg_density: 0.8567
search_cnt: 175303, max_n: 42, min_density: 0.6048, avg_density: 0.8438
>>/sc-msdoor t_Search: 30.201649	MaxKPlex_Size: 21 t_Total: 31.075068 t_Seesaw: 0.000000

**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 639,015; m = 3,214,986 (undirected)
*** Heuristic kplex size: 26, time: 313,290 (microseconds)
*** Degeneracy k-plex size: 34, max_core: 63, UB: 66, Time: 42,604 (microseconds)
*** After core shrink: n = 18,709, m = 724,599 (undirected)
*** After core-truss co-pruning: n = 9,692, m = 374,193, density = 0.0080
Degen find a solution of size 35
Degen find a solution of size 36
Degen find a solution of size 37
Degen find a solution of size 38
Degen find a solution of size 39
prune_cnt: 512, max_n: 615, min_density: 0.1108, avg_density: 0.8106
search_cnt: 490, max_n: 615, min_density: 0.1108, avg_density: 0.8033
>>/soc-FourSquare t_Search: 0.712464	MaxKPlex_Size: 39 t_Total: 1.493145 t_Seesaw: 0.000000

**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 87,805; m = 2,565,054 (undirected)
*** Heuristic kplex size: 24, time: 974 (microseconds)
*** Degeneracy k-plex size: 24, max_core: 47, UB: 50, Time: 22,595 (microseconds)
*** After core shrink: n = 87,084, m = 2,558,070 (undirected)
*** After core-truss co-pruning: n = 87,084, m = 2,414,934, density = 0.0006
Degen find a solution of size 30
Degen find a solution of size 36
prune_cnt: 4604, max_n: 48, min_density: 0.8636, avg_density: 0.9966
search_cnt: 154, max_n: 48, min_density: 0.8636, avg_density: 0.8976
>>/sc-pkustk11 t_Search: 0.602140	MaxKPlex_Size: 36 t_Total: 0.928530 t_Seesaw: 0.000000

**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 2,997,167; m = 106,349,209 (undirected)
*** Heuristic kplex size: 20, time: 403,928 (microseconds)
*** Degeneracy k-plex size: 30, max_core: 230, UB: 233, Time: 3,374,628 (microseconds)
*** After core shrink: n = 1,698,831, m = 87,924,565 (undirected)
*** After core-truss co-pruning: n = 92,201, m = 4,699,948, density = 0.0011
Degen find a solution of size 31
Degen find a solution of size 33
Degen find a solution of size 34
Degen find a solution of size 36
Degen find a solution of size 39
Degen find a solution of size 50
Degen find a solution of size 56
Degen find a solution of size 58
prune_cnt: 610, max_n: 169, min_density: 0.7358, avg_density: 0.8635
search_cnt: 607, max_n: 169, min_density: 0.7358, avg_density: 0.8629
>>/soc-orkut t_Search: 624.981623	MaxKPlex_Size: 59 t_Total: 789.282398 t_Seesaw: 0.000000

**** kPlexS (Release) build at 17:40:27 Jun  4 2024 ***
# Start reading graph from an edgelist file, Require files "edges.txt"
# Note that this function is not optimized. Reading from a binary file will be faster
*	n = 172; m = 9,435 (undirected)
*** Heuristic kplex size: 11, time: 653 (microseconds)
*** Degeneracy k-plex size: 16, max_core: 102, UB: 105, Time: 131 (microseconds)
*** After core shrink: n = 171, m = 9,435 (undirected)
*** After core-truss co-pruning: n = 171, m = 9,435, density = 0.6491
Degen find a solution of size 17
prune_cnt: 144, max_n: 171, min_density: 0.6491, avg_density: 0.7286
search_cnt: 144, max_n: 171, min_density: 0.6491, avg_density: 0.7286
>>/keller4 t_Search: 1428.002678	MaxKPlex_Size: 21 t_Total: 1428.005141 t_Seesaw: 0.000000

